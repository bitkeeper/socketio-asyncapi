asyncapi: 2.5.0
channels:
  /:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/get_asyncapi_yaml'
        - $ref: '#/components/messages/my_event_no_typing'
        - $ref: '#/components/messages/my_event_dict'
        - $ref: '#/components/messages/my_event_and_emit_dict'
        - $ref: '#/components/messages/my_event_and_emit_str'
        - $ref: '#/components/messages/my_event_and_emit_str_with_ack'
        - $ref: '#/components/messages/my_event_basemodel'
        - $ref: '#/components/messages/my_event_basemodel_with_ack'
        - $ref: '#/components/messages/connect'
        - $ref: '#/components/messages/disconnect'
    subscribe:
      message:
        oneOf:
        - $ref: '#/components/messages/my_response_dict'
        - $ref: '#/components/messages/my_response_str'
        - $ref: '#/components/messages/my_response_basemodel'
    x-handlers:
      disconnect: disconnect
  /ns1:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/my_event_ns'
    subscribe:
      message:
        oneOf: []
components:
  messages:
    connect:
      description: ''
      name: connect
      payload:
        $ref: '#/components/schemas/NoSpec'
      title: Connect
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    disconnect:
      description: ''
      name: disconnect
      payload:
        $ref: '#/components/schemas/NoSpec'
      title: Disconnect
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    get_asyncapi_yaml:
      description: generate and returns a asyncapi yaml schema
      name: get_asyncapi_yaml
      payload:
        $ref: '#/components/schemas/NoSpec'
      title: Get_Asyncapi_Yaml
      x-ack:
        type: string
    my_event_and_emit_dict:
      description: 'demonstrates and receive event and emit payload as dict '
      name: my_event_and_emit_dict
      payload:
        type: object
      title: My_Event_And_Emit_Dict
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    my_event_and_emit_str:
      description: 'demonstrates and receive event and emit payload as str '
      name: my_event_and_emit_str
      payload:
        type: string
      title: My_Event_And_Emit_Str
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    my_event_and_emit_str_with_ack:
      description: 'demonstrates and receive event and emit payload as str '
      name: my_event_and_emit_str_with_ack
      payload:
        type: string
      title: My_Event_And_Emit_Str_With_Ack
      x-ack:
        type: string
    my_event_basemodel:
      description: demonstrates use of a pydantic basemodel for event receive and
        emit
      name: my_event_basemodel
      payload:
        $ref: '#/components/schemas/MyDataModel'
      title: My_Event_Basemodel
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    my_event_basemodel_with_ack:
      description: demonstrates use of a pydantic basemodel for event receive, emit
        and acknowledge
      name: my_event_basemodel_with_ack
      payload:
        $ref: '#/components/schemas/MyDataModel'
      title: My_Event_Basemodel_With_Ack
      x-ack:
        $ref: '#/components/schemas/MyDataModel'
    my_event_dict:
      description: demonstrates and receive event, payload as dict and emit without
        type information (dict used)
      name: my_event_dict
      payload:
        type: object
      title: My_Event_Dict
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    my_event_no_typing:
      description: demonstrates and receive event and emit without type information
        (dict used)
      name: my_event_no_typing
      title: My_Event_No_Typing
    my_event_ns:
      description: demonstrates use of a pydantic basemodel for event receive and
        emit
      name: my_event_ns
      payload:
        $ref: '#/components/schemas/MyDataModel'
      title: My_Event_Ns
      x-ack:
        $ref: '#/components/schemas/NoSpec'
    my_response_basemodel:
      description: ''
      name: my_response_basemodel
      payload:
        $ref: '#/components/schemas/MyDataModel'
    my_response_dict:
      description: ''
      name: my_response_dict
      payload:
        type: object
    my_response_str:
      description: ''
      name: my_response_str
      payload:
        type: string
  schemas:
    MyDataModel:
      description: Example datamodel
      properties:
        message:
          description: Your message
          example: foobar
          title: Message
          type: string
      required:
      - message
      title: MyDataModel
      type: object
    NoSpec:
      description: Specification is not provided
info:
  description: 'Demo Server

    <br/> AsyncAPI currently does not support Socket.IO binding and Web Socket like
    syntax used for now.

    In order to add support for Socket.IO ACK value, AsyncAPI is extended with with
    x-ack keyword.

    This documentation should **NOT** be used for generating code due to these limitations.

    '
  title: Demo
  version: 1.0.0
servers:
  DEMO_SIO:
    protocol: socketio
    protocolVersion: '5'
    url: http://localhost:5010
